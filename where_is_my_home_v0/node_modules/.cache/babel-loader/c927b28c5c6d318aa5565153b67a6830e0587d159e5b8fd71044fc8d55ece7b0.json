{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { writeArticle, modifyArticle, getArticle } from \"@/api/board\";\nexport default {\n  name: \"BoardInputItem\",\n  data() {\n    return {\n      article: {\n        articleno: 0,\n        userid: \"\",\n        subject: \"\",\n        content: \"\"\n      },\n      isUserid: false\n    };\n  },\n  props: {\n    type: {\n      type: String\n    }\n  },\n  created() {\n    if (this.type === \"modify\") {\n      let param = this.$route.params.articleno;\n      getArticle(param, ({\n        data\n      }) => {\n        // this.article.articleno = data.article.articleno;\n        // this.article.userid = data.article.userid;\n        // this.article.subject = data.article.subject;\n        // this.article.content = data.article.content;\n        this.article = data;\n      }, error => {\n        console.log(error);\n      });\n      this.isUserid = true;\n    }\n  },\n  methods: {\n    onSubmit(event) {\n      event.preventDefault();\n      let err = true;\n      let msg = \"\";\n      !this.article.userid && (msg = \"작성자 입력해주세요\", err = false, this.$refs.userid.focus());\n      err && !this.article.subject && (msg = \"제목 입력해주세요\", err = false, this.$refs.subject.focus());\n      err && !this.article.content && (msg = \"내용 입력해주세요\", err = false, this.$refs.content.focus());\n      if (!err) alert(msg);else this.type === \"register\" ? this.registArticle() : this.modifyArticle();\n    },\n    onReset(event) {\n      event.preventDefault();\n      this.article.articleno = 0;\n      this.article.subject = \"\";\n      this.article.content = \"\";\n      this.moveList();\n    },\n    registArticle() {\n      let param = {\n        userid: this.article.userid,\n        subject: this.article.subject,\n        content: this.article.content\n      };\n      writeArticle(param, ({\n        data\n      }) => {\n        let msg = \"등록 처리시 문제가 발생했습니다.\";\n        if (data === \"success\") {\n          msg = \"등록이 완료되었습니다.\";\n        }\n        alert(msg);\n        this.moveList();\n      }, error => {\n        console.log(error);\n      });\n    },\n    modifyArticle() {\n      let param = {\n        articleno: this.article.articleno,\n        userid: this.article.userid,\n        subject: this.article.subject,\n        content: this.article.content\n      };\n      modifyArticle(param, ({\n        data\n      }) => {\n        let msg = \"수정 처리시 문제가 발생했습니다.\";\n        if (data === \"success\") {\n          msg = \"수정이 완료되었습니다.\";\n        }\n        alert(msg);\n        // 현재 route를 /list로 변경.\n        this.moveList();\n      }, error => {\n        console.log(error);\n      });\n    },\n    moveList() {\n      this.$router.push({\n        name: \"boardlist\"\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AA4CA;AAEA;EACAA;EACAC;IACA;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;IACA;EACA;EACAC;IACAC;MAAAA;IAAA;EACA;EACAC;IACA;MACA;MACAC,WACAC,OACA;QAAAX;MAAA;QACA;QACA;QACA;QACA;QACA;MACA,GACAY;QACAC;MACA,EACA;MACA;IACA;EACA;EACAC;IACAC;MACAC;MAEA;MACA;MACA;MACAC;MACAA;MAEA,0BACA;IACA;IACAC;MACAF;MACA;MACA;MACA;MACA;IACA;IACAG;MACA;QACAhB;QACAC;QACAC;MACA;MACAe,aACAT,OACA;QAAAX;MAAA;QACA;QACA;UACAqB;QACA;QACAC;QACA;MACA,GACAV;QACAC;MACA,EACA;IACA;IACAU;MACA;QACArB;QACAC;QACAC;QACAC;MACA;MACAkB,cACAZ,OACA;QAAAX;MAAA;QACA;QACA;UACAqB;QACA;QACAC;QACA;QACA;MACA,GACAV;QACAC;MACA,EACA;IACA;IACAW;MACA;QAAAzB;MAAA;IACA;EACA;AACA","names":["name","data","article","articleno","userid","subject","content","isUserid","props","type","created","getArticle","param","error","console","methods","onSubmit","event","err","onReset","registArticle","writeArticle","msg","alert","modifyArticle","moveList"],"sourceRoot":"src/components/board/item","sources":["BoardInputItem.vue"],"sourcesContent":["<template>\r\n  <b-row class=\"mb-1\">\r\n    <b-col style=\"text-align: left\">\r\n      <b-form @submit=\"onSubmit\" @reset=\"onReset\">\r\n        <b-form-group id=\"userid-group\" label=\"작성자:\" label-for=\"userid\" description=\"작성자를 입력하세요.\">\r\n          <b-form-input\r\n            id=\"userid\"\r\n            :disabled=\"isUserid\"\r\n            v-model=\"article.userid\"\r\n            type=\"text\"\r\n            required\r\n            placeholder=\"작성자 입력...\"\r\n          ></b-form-input>\r\n        </b-form-group>\r\n\r\n        <b-form-group id=\"subject-group\" label=\"제목:\" label-for=\"subject\" description=\"제목을 입력하세요.\">\r\n          <b-form-input\r\n            id=\"subject\"\r\n            v-model=\"article.subject\"\r\n            type=\"text\"\r\n            required\r\n            placeholder=\"제목 입력...\"\r\n          ></b-form-input>\r\n        </b-form-group>\r\n\r\n        <b-form-group id=\"content-group\" label=\"내용:\" label-for=\"content\">\r\n          <b-form-textarea\r\n            id=\"content\"\r\n            v-model=\"article.content\"\r\n            placeholder=\"내용 입력...\"\r\n            rows=\"10\"\r\n            max-rows=\"15\"\r\n          ></b-form-textarea>\r\n        </b-form-group>\r\n\r\n        <b-button type=\"submit\" variant=\"primary\" class=\"m-1\" v-if=\"this.type === 'register'\">글작성</b-button>\r\n        <b-button type=\"submit\" variant=\"primary\" class=\"m-1\" v-else>글수정</b-button>\r\n        <b-button type=\"reset\" variant=\"danger\" class=\"m-1\">초기화</b-button>\r\n      </b-form>\r\n    </b-col>\r\n  </b-row>\r\n</template>\r\n\r\n<script>\r\nimport { writeArticle, modifyArticle, getArticle } from \"@/api/board\";\r\n\r\nexport default {\r\n  name: \"BoardInputItem\",\r\n  data() {\r\n    return {\r\n      article: {\r\n        articleno: 0,\r\n        userid: \"\",\r\n        subject: \"\",\r\n        content: \"\",\r\n      },\r\n      isUserid: false,\r\n    };\r\n  },\r\n  props: {\r\n    type: { type: String },\r\n  },\r\n  created() {\r\n    if (this.type === \"modify\") {\r\n      let param = this.$route.params.articleno;\r\n      getArticle(\r\n        param,\r\n        ({ data }) => {\r\n          // this.article.articleno = data.article.articleno;\r\n          // this.article.userid = data.article.userid;\r\n          // this.article.subject = data.article.subject;\r\n          // this.article.content = data.article.content;\r\n          this.article = data;\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n      this.isUserid = true;\r\n    }\r\n  },\r\n  methods: {\r\n    onSubmit(event) {\r\n      event.preventDefault();\r\n\r\n      let err = true;\r\n      let msg = \"\";\r\n      !this.article.userid && ((msg = \"작성자 입력해주세요\"), (err = false), this.$refs.userid.focus());\r\n      err && !this.article.subject && ((msg = \"제목 입력해주세요\"), (err = false), this.$refs.subject.focus());\r\n      err && !this.article.content && ((msg = \"내용 입력해주세요\"), (err = false), this.$refs.content.focus());\r\n\r\n      if (!err) alert(msg);\r\n      else this.type === \"register\" ? this.registArticle() : this.modifyArticle();\r\n    },\r\n    onReset(event) {\r\n      event.preventDefault();\r\n      this.article.articleno = 0;\r\n      this.article.subject = \"\";\r\n      this.article.content = \"\";\r\n      this.moveList();\r\n    },\r\n    registArticle() {\r\n      let param = {\r\n        userid: this.article.userid,\r\n        subject: this.article.subject,\r\n        content: this.article.content,\r\n      };\r\n      writeArticle(\r\n        param,\r\n        ({ data }) => {\r\n          let msg = \"등록 처리시 문제가 발생했습니다.\";\r\n          if (data === \"success\") {\r\n            msg = \"등록이 완료되었습니다.\";\r\n          }\r\n          alert(msg);\r\n          this.moveList();\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    },\r\n    modifyArticle() {\r\n      let param = {\r\n        articleno: this.article.articleno,\r\n        userid: this.article.userid,\r\n        subject: this.article.subject,\r\n        content: this.article.content,\r\n      };\r\n      modifyArticle(\r\n        param,\r\n        ({ data }) => {\r\n          let msg = \"수정 처리시 문제가 발생했습니다.\";\r\n          if (data === \"success\") {\r\n            msg = \"수정이 완료되었습니다.\";\r\n          }\r\n          alert(msg);\r\n          // 현재 route를 /list로 변경.\r\n          this.moveList();\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    },\r\n    moveList() {\r\n      this.$router.push({ name: \"boardlist\" });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}