{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import moment from \"moment\";\nimport { getArticle } from \"@/api/board\";\nimport { mapState } from \"vuex\";\nconst memberStore = \"memberStore\";\nexport default {\n  name: \"BoardDetail\",\n  data() {\n    return {\n      article: {}\n    };\n  },\n  computed: {\n    ...mapState(memberStore, [\"userInfo\"]),\n    message() {\n      if (this.article.content) return this.article.content.split(\"\\n\").join(\"<br>\");\n      return \"\";\n    }\n  },\n  created() {\n    let param = this.$route.params.articleno;\n    getArticle(param, ({\n      data\n    }) => {\n      this.article = data;\n    }, error => {\n      console.log(error);\n    });\n  },\n  methods: {\n    moveModifyArticle() {\n      this.$router.replace({\n        name: \"boardmodify\",\n        params: {\n          articleno: this.article.articleno\n        }\n      });\n      //   this.$router.push({ path: `/board/modify/${this.article.articleno}` });\n    },\n\n    deleteArticle() {\n      if (confirm(\"정말로 삭제?\")) {\n        this.$router.replace({\n          name: \"boarddelete\",\n          params: {\n            articleno: this.article.articleno\n          }\n        });\n      }\n    },\n    moveList() {\n      this.$router.push({\n        name: \"boardlist\"\n      });\n    }\n  }\n  // filters: {\n  //   dateFormat(regtime) {\n  //     return moment(new Date(regtime)).format(\"YY.MM.DD hh:mm:ss\");\n  //   },\n  // },\n};","map":{"version":3,"mappings":";AAmCA;AACA;AACA;AAEA;AAEA;EACAA;EACAC;IACA;MACAC;IACA;EACA;EACAC;IACA;IACAC;MACA;MACA;IACA;EACA;EACAC;IACA;IACAC,WACAC,OACA;MAAAN;IAAA;MACA;IACA,GACAO;MACAC;IACA,EACA;EACA;EACAC;IACAC;MACA;QACAX;QACAY;UAAAC;QAAA;MACA;MACA;IACA;;IACAC;MACA;QACA;UACAd;UACAY;YAAAC;UAAA;QACA;MACA;IACA;IACAE;MACA;QAAAf;MAAA;IACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA","names":["name","data","article","computed","message","created","getArticle","param","error","console","methods","moveModifyArticle","params","articleno","deleteArticle","moveList"],"sourceRoot":"src/components/board","sources":["BoardView.vue"],"sourcesContent":["<template>\r\n  <b-container class=\"bv-example-row mt-3\">\r\n    <b-row>\r\n      <b-col>\r\n        <b-alert show><h3>글보기</h3></b-alert>\r\n      </b-col>\r\n    </b-row>\r\n    <b-row class=\"mb-1\">\r\n      <b-col class=\"text-left\">\r\n        <b-button variant=\"outline-primary\" @click=\"moveList\">목록</b-button>\r\n      </b-col>\r\n      <b-col class=\"text-right\" v-if=\"userInfo.userid === article.userid\">\r\n        <b-button variant=\"outline-info\" size=\"sm\" @click=\"moveModifyArticle\" class=\"mr-2\">글수정</b-button>\r\n        <b-button variant=\"outline-danger\" size=\"sm\" @click=\"deleteArticle\">글삭제</b-button>\r\n      </b-col>\r\n    </b-row>\r\n    <b-row class=\"mb-1\">\r\n      <b-col>\r\n        <b-card\r\n          :header-html=\"`<h3>${article.articleno}.\r\n          ${article.subject} [${article.hit}]</h3><div><h6>${article.userid}</div><div>${article.regtime}</h6></div>`\"\r\n          class=\"mb-2\"\r\n          border-variant=\"dark\"\r\n          no-body\r\n        >\r\n          <b-card-body class=\"text-left\">\r\n            <div v-html=\"message\"></div>\r\n          </b-card-body>\r\n        </b-card>\r\n      </b-col>\r\n    </b-row>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\n// import moment from \"moment\";\r\nimport { getArticle } from \"@/api/board\";\r\nimport { mapState } from \"vuex\";\r\n\r\nconst memberStore = \"memberStore\";\r\n\r\nexport default {\r\n  name: \"BoardDetail\",\r\n  data() {\r\n    return {\r\n      article: {},\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(memberStore, [\"userInfo\"]),\r\n    message() {\r\n      if (this.article.content) return this.article.content.split(\"\\n\").join(\"<br>\");\r\n      return \"\";\r\n    },\r\n  },\r\n  created() {\r\n    let param = this.$route.params.articleno;\r\n    getArticle(\r\n      param,\r\n      ({ data }) => {\r\n        this.article = data;\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  },\r\n  methods: {\r\n    moveModifyArticle() {\r\n      this.$router.replace({\r\n        name: \"boardmodify\",\r\n        params: { articleno: this.article.articleno },\r\n      });\r\n      //   this.$router.push({ path: `/board/modify/${this.article.articleno}` });\r\n    },\r\n    deleteArticle() {\r\n      if (confirm(\"정말로 삭제?\")) {\r\n        this.$router.replace({\r\n          name: \"boarddelete\",\r\n          params: { articleno: this.article.articleno },\r\n        });\r\n      }\r\n    },\r\n    moveList() {\r\n      this.$router.push({ name: \"boardlist\" });\r\n    },\r\n  },\r\n  // filters: {\r\n  //   dateFormat(regtime) {\r\n  //     return moment(new Date(regtime)).format(\"YY.MM.DD hh:mm:ss\");\r\n  //   },\r\n  // },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}