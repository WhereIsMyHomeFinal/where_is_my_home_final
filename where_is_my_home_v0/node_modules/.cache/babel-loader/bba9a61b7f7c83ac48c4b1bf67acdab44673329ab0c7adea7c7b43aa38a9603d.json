{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { listArticle } from \"@/api/board\";\nexport default {\n  name: \"BoardList\",\n  data() {\n    return {\n      articles: [],\n      fields: [{\n        key: \"articleno\",\n        label: \"글번호\",\n        tdClass: \"tdClass\"\n      }, {\n        key: \"subject\",\n        label: \"제목\",\n        tdClass: \"tdSubject\"\n      }, {\n        key: \"userid\",\n        label: \"작성자\",\n        tdClass: \"tdClass\"\n      }, {\n        key: \"regtime\",\n        label: \"작성일\",\n        tdClass: \"tdClass\"\n      }, {\n        key: \"hit\",\n        label: \"조회수\",\n        tdClass: \"tdClass\"\n      }]\n    };\n  },\n  created() {\n    let param = {\n      pg: 1,\n      spp: 20,\n      key: null,\n      word: null\n    };\n    listArticle(param, ({\n      data\n    }) => {\n      this.articles = data;\n    }, error => {\n      console.log(error);\n    });\n  },\n  methods: {\n    moveWrite() {\n      this.$router.push({\n        name: \"boardwrite\"\n      });\n    },\n    viewArticle(article) {\n      this.$router.push({\n        name: \"boardview\",\n        params: {\n          articleno: article.articleno\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AA2BA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC,SACA;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA,GACA;QAAAF;QAAAC;QAAAC;MAAA;IAEA;EACA;EACAC;IACA;MACAC;MACAC;MACAL;MACAM;IACA;IACAC,YACAC,OACA;MAAAX;IAAA;MACA;IACA,GACAY;MACAC;IACA,EACA;EACA;EACAC;IACAC;MACA;QAAAhB;MAAA;IACA;IACAiB;MACA;QACAjB;QACAkB;UAAAC;QAAA;MACA;IACA;EACA;AACA","names":["name","data","articles","fields","key","label","tdClass","created","pg","spp","word","listArticle","param","error","console","methods","moveWrite","viewArticle","params","articleno"],"sourceRoot":"src/components/board","sources":["BoardList.vue"],"sourcesContent":["<template>\r\n  <b-container class=\"bv-example-row mt-3\">\r\n    <b-row>\r\n      <b-col>\r\n        <b-alert show><h3>글목록</h3></b-alert>\r\n      </b-col>\r\n    </b-row>\r\n    <b-row class=\"mb-1\">\r\n      <b-col class=\"text-right\">\r\n        <b-button variant=\"outline-primary\" @click=\"moveWrite()\">글쓰기</b-button>\r\n      </b-col>\r\n    </b-row>\r\n    <b-row>\r\n      <b-col>\r\n        <b-table striped hover :items=\"articles\" :fields=\"fields\" @row-clicked=\"viewArticle\">\r\n          <template #cell(subject)=\"data\">\r\n            <router-link :to=\"{ name: 'boardview', params: { articleno: data.item.articleno } }\">\r\n              {{ data.item.subject }}\r\n            </router-link>\r\n          </template>\r\n        </b-table>\r\n      </b-col>\r\n    </b-row>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\nimport { listArticle } from \"@/api/board\";\r\n\r\nexport default {\r\n  name: \"BoardList\",\r\n  data() {\r\n    return {\r\n      articles: [],\r\n      fields: [\r\n        { key: \"articleno\", label: \"글번호\", tdClass: \"tdClass\" },\r\n        { key: \"subject\", label: \"제목\", tdClass: \"tdSubject\" },\r\n        { key: \"userid\", label: \"작성자\", tdClass: \"tdClass\" },\r\n        { key: \"regtime\", label: \"작성일\", tdClass: \"tdClass\" },\r\n        { key: \"hit\", label: \"조회수\", tdClass: \"tdClass\" },\r\n      ],\r\n    };\r\n  },\r\n  created() {\r\n    let param = {\r\n      pg: 1,\r\n      spp: 20,\r\n      key: null,\r\n      word: null,\r\n    };\r\n    listArticle(\r\n      param,\r\n      ({ data }) => {\r\n        this.articles = data;\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  },\r\n  methods: {\r\n    moveWrite() {\r\n      this.$router.push({ name: \"boardwrite\" });\r\n    },\r\n    viewArticle(article) {\r\n      this.$router.push({\r\n        name: \"boardview\",\r\n        params: { articleno: article.articleno },\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scope>\r\n.tdClass {\r\n  width: 50px;\r\n  text-align: center;\r\n}\r\n.tdSubject {\r\n  width: 300px;\r\n  text-align: left;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}