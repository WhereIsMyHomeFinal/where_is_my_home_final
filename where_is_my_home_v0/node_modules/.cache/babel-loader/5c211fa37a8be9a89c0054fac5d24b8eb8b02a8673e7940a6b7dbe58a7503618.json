{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState, mapGetters, mapActions } from \"vuex\";\nconst memberStore = \"memberStore\";\nexport default {\n  name: \"TheHeaderNavbar\",\n  data() {\n    return {};\n  },\n  computed: {\n    ...mapState(memberStore, [\"isLogin\", \"userInfo\"]),\n    ...mapGetters([\"checkUserInfo\"])\n  },\n  methods: {\n    ...mapActions(memberStore, [\"userLogout\"]),\n    // ...mapMutations(memberStore, [\"SET_IS_LOGIN\", \"SET_USER_INFO\"]),\n    onClickLogout() {\n      // this.SET_IS_LOGIN(false);\n      // this.SET_USER_INFO(null);\n      // sessionStorage.removeItem(\"access-token\");\n      // if (this.$route.path != \"/\") this.$router.push({ name: \"main\" });\n      console.log(this.userInfo.userid);\n      //vuex actions에서 userLogout 실행(Backend에 저장 된 리프레시 토큰 없애기\n      //+ satate에 isLogin, userInfo 정보 변경)\n      // this.$store.dispatch(\"userLogout\", this.userInfo.userid);\n      this.userLogout(this.userInfo.userid);\n      sessionStorage.removeItem(\"access-token\"); //저장된 토큰 없애기\n      sessionStorage.removeItem(\"refresh-token\"); //저장된 토큰 없애기\n      if (this.$route.path != \"/\") this.$router.push({\n        name: \"main\"\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAsEA;AAEA;AAEA;EACAA;EACAC;IACA;EACA;EACAC;IACA;IACA;EACA;EACAC;IACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACAC;MACA;MACA;MACA;MACA;MACAC;MACAA;MACA;QAAAN;MAAA;IACA;EACA;AACA","names":["name","data","computed","methods","onClickLogout","console","sessionStorage"],"sourceRoot":"src/components","sources":["TheHeaderNavbar.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <b-navbar toggleable=\"lg\" type=\"light\" variant=\"light\">\r\n      <b-navbar-brand href=\"#\">\r\n        <router-link :to=\"{ name: 'main' }\" class=\"link\">\r\n          <div class=\"item col-md-2 text-info\"><h1>구해줘홈즈</h1></div>\r\n        </router-link>\r\n      </b-navbar-brand>\r\n\r\n      <b-navbar-toggle target=\"nav-collapse\"></b-navbar-toggle>\r\n\r\n      <b-collapse id=\"nav-collapse\" is-nav>\r\n        <b-navbar-nav>\r\n          <b-nav-item href=\"#\">\r\n            <!-- <router-link :to=\"{ name: 'main' }\" class=\"link\">\r\n              <b-icon icon=\"house-door\" animation=\"fade\" font-scale=\"2\"></b-icon>\r\n              메인\r\n            </router-link>\r\n            <router-link :to=\"{ name: 'insta' }\" class=\"m-2 link\">\r\n              <b-icon icon=\"instagram\" animation=\"fade\" font-scale=\"2\"></b-icon>\r\n              인스타그램\r\n            </router-link>\r\n            <router-link :to=\"{ name: 'board' }\" class=\"m-2 link\">\r\n              <b-icon icon=\"journal\" animation=\"fade\" font-scale=\"2\"></b-icon>\r\n              게시판\r\n            </router-link> -->\r\n            <router-link :to=\"{ name: 'house' }\" class=\"m-2 link\">\r\n              <!-- <b-icon icon=\"house-fill\" animation=\"fade\" font-scale=\"2\"></b-icon> -->\r\n              매물 검색\r\n            </router-link>\r\n            <!-- <router-link :to=\"{ name: 'todo' }\" class=\"link\">\r\n              <b-icon icon=\"calendar-check\" animation=\"fade\" font-scale=\"2\"></b-icon>\r\n              TodoList\r\n            </router-link> -->\r\n          </b-nav-item>\r\n        </b-navbar-nav>\r\n\r\n        <!-- after login -->\r\n        <b-navbar-nav class=\"ml-auto\" v-if=\"userInfo\">\r\n          <b-nav-item class=\"align-self-center\">\r\n            <b-avatar variant=\"primary\" :src=\"require('@/assets/profile_01.png')\"></b-avatar>\r\n            {{ userInfo.username }}({{ userInfo.userid }})님 환영합니다.\r\n          </b-nav-item>\r\n          <b-nav-item class=\"align-self-center\">\r\n            <router-link :to=\"{ name: 'mypage' }\" class=\"link align-self-center\">MY PAGE</router-link>\r\n          </b-nav-item>\r\n          <b-nav-item class=\"align-self-center link\" @click.prevent=\"onClickLogout\">LOGOUT</b-nav-item>\r\n        </b-navbar-nav>\r\n        <!-- before login -->\r\n        <b-navbar-nav class=\"ml-auto\" v-else>\r\n          <b-nav-item-dropdown right>\r\n            <template #button-content>\r\n              <b-icon icon=\"people\" font-scale=\"2\"></b-icon>\r\n            </template>\r\n            <b-dropdown-item href=\"#\">\r\n              <router-link :to=\"{ name: 'join' }\" class=\"link\">\r\n                <b-icon icon=\"person-circle\"></b-icon> 회원가입\r\n              </router-link>\r\n            </b-dropdown-item>\r\n            <b-dropdown-item href=\"#\">\r\n              <router-link :to=\"{ name: 'login' }\" class=\"link\"> <b-icon icon=\"key\"></b-icon> LOGIN </router-link>\r\n            </b-dropdown-item>\r\n          </b-nav-item-dropdown>\r\n        </b-navbar-nav>\r\n      </b-collapse>\r\n    </b-navbar>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapGetters, mapActions } from \"vuex\";\r\n\r\nconst memberStore = \"memberStore\";\r\n\r\nexport default {\r\n  name: \"TheHeaderNavbar\",\r\n  data() {\r\n    return {};\r\n  },\r\n  computed: {\r\n    ...mapState(memberStore, [\"isLogin\", \"userInfo\"]),\r\n    ...mapGetters([\"checkUserInfo\"]),\r\n  },\r\n  methods: {\r\n    ...mapActions(memberStore, [\"userLogout\"]),\r\n    // ...mapMutations(memberStore, [\"SET_IS_LOGIN\", \"SET_USER_INFO\"]),\r\n    onClickLogout() {\r\n      // this.SET_IS_LOGIN(false);\r\n      // this.SET_USER_INFO(null);\r\n      // sessionStorage.removeItem(\"access-token\");\r\n      // if (this.$route.path != \"/\") this.$router.push({ name: \"main\" });\r\n      console.log(this.userInfo.userid);\r\n      //vuex actions에서 userLogout 실행(Backend에 저장 된 리프레시 토큰 없애기\r\n      //+ satate에 isLogin, userInfo 정보 변경)\r\n      // this.$store.dispatch(\"userLogout\", this.userInfo.userid);\r\n      this.userLogout(this.userInfo.userid);\r\n      sessionStorage.removeItem(\"access-token\"); //저장된 토큰 없애기\r\n      sessionStorage.removeItem(\"refresh-token\"); //저장된 토큰 없애기\r\n      if (this.$route.path != \"/\") this.$router.push({ name: \"main\" });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#logo {\r\n  width: 120px;\r\n}\r\n\r\n.link {\r\n  text-decoration: none;\r\n  color: #17a2b8;\r\n}\r\n\r\n.link:hover {\r\n  text-decoration: none;\r\n  color: #6E8A8E;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}