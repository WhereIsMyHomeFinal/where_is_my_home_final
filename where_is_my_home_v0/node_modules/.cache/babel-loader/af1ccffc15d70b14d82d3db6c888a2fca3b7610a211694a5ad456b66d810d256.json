{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState, mapActions } from \"vuex\";\nconst memberStore = \"memberStore\";\nexport default {\n  name: \"UserLogin\",\n  data() {\n    return {\n      // isLoginError: false,\n      user: {\n        userid: null,\n        userpwd: null\n      }\n    };\n  },\n  computed: {\n    ...mapState(memberStore, [\"isLogin\", \"isLoginError\", \"userInfo\"])\n  },\n  methods: {\n    ...mapActions(memberStore, [\"userConfirm\", \"getUserInfo\"]),\n    async confirm() {\n      await this.userConfirm(this.user);\n      let token = sessionStorage.getItem(\"access-token\");\n      // console.log(\"1. confirm() token >> \" + token);\n      if (this.isLogin) {\n        await this.getUserInfo(token);\n        // console.log(\"4. confirm() userInfo :: \", this.userInfo);\n        this.$router.push({\n          name: \"main\"\n        });\n      }\n    },\n    movePage() {\n      this.$router.push({\n        name: \"join\"\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AA2CA;AAEA;AAEA;EACAA;EACAC;IACA;MACA;MACAC;QACAC;QACAC;MACA;IACA;EACA;EACAC;IACA;EACA;EACAC;IACA;IACA;MACA;MACA;MACA;MACA;QACA;QACA;QACA;UAAAN;QAAA;MACA;IACA;IACAO;MACA;QAAAP;MAAA;IACA;EACA;AACA","names":["name","data","user","userid","userpwd","computed","methods","movePage"],"sourceRoot":"src/components/user","sources":["UserLogin.vue"],"sourcesContent":["<template>\r\n  <b-container class=\"bv-example-row mt-3\">\r\n    <b-row>\r\n      <b-col>\r\n        <b-alert variant=\"secondary\" show><h3>로그인</h3></b-alert>\r\n      </b-col>\r\n    </b-row>\r\n    <b-row>\r\n      <b-col></b-col>\r\n      <b-col cols=\"8\">\r\n        <b-card class=\"text-center mt-3\" style=\"max-width: 40rem\" align=\"left\">\r\n          <b-form class=\"text-left\">\r\n            <b-alert show variant=\"danger\" v-if=\"isLoginError\">아이디 또는 비밀번호를 확인하세요.</b-alert>\r\n            <b-form-group label=\"아이디:\" label-for=\"userid\">\r\n              <b-form-input\r\n                id=\"userid\"\r\n                v-model=\"user.userid\"\r\n                required\r\n                placeholder=\"아이디 입력....\"\r\n                @keyup.enter=\"confirm\"\r\n              ></b-form-input>\r\n            </b-form-group>\r\n            <b-form-group label=\"비밀번호:\" label-for=\"userpwd\">\r\n              <b-form-input\r\n                type=\"password\"\r\n                id=\"userpwd\"\r\n                v-model=\"user.userpwd\"\r\n                required\r\n                placeholder=\"비밀번호 입력....\"\r\n                @keyup.enter=\"confirm\"\r\n              ></b-form-input>\r\n            </b-form-group>\r\n            <b-button type=\"button\" variant=\"primary\" class=\"m-1\" @click=\"confirm\">로그인</b-button>\r\n            <b-button type=\"button\" variant=\"success\" class=\"m-1\" @click=\"movePage\">회원가입</b-button>\r\n          </b-form>\r\n        </b-card>\r\n      </b-col>\r\n      <b-col></b-col>\r\n    </b-row>\r\n  </b-container>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from \"vuex\";\r\n\r\nconst memberStore = \"memberStore\";\r\n\r\nexport default {\r\n  name: \"UserLogin\",\r\n  data() {\r\n    return {\r\n      // isLoginError: false,\r\n      user: {\r\n        userid: null,\r\n        userpwd: null,\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(memberStore, [\"isLogin\", \"isLoginError\", \"userInfo\"]),\r\n  },\r\n  methods: {\r\n    ...mapActions(memberStore, [\"userConfirm\", \"getUserInfo\"]),\r\n    async confirm() {\r\n      await this.userConfirm(this.user);\r\n      let token = sessionStorage.getItem(\"access-token\");\r\n      // console.log(\"1. confirm() token >> \" + token);\r\n      if (this.isLogin) {\r\n        await this.getUserInfo(token);\r\n        // console.log(\"4. confirm() userInfo :: \", this.userInfo);\r\n        this.$router.push({ name: \"main\" });\r\n      }\r\n    },\r\n    movePage() {\r\n      this.$router.push({ name: \"join\" });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}