<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.vue.model.mapper.HouseDealMapper">
	
	<!-- 주택매매정보 조회 -->
	<select id="selectHouseDeal" resultType="HouseDealDto" parameterType="map">
		select d.no, d.aptCode, i.aptName, d.dealAmount, d.area, i.dongName, d.floor, i.buildYear,
		i.lat, i.lng,
		EXISTS (select * from likedeal where user_idx= #{userIdx} and deal_idx = #{dealIdx}) as isLiked
		from housedeal d join houseinfo i on d.aptCode = i.aptCode
		where d.no = #{dealIdx}
	</select>
	
	<!-- 주택매매정보목록 조회 -->
	<select id="selectHouseDeals" resultType="HouseDealDto" parameterType="HouseDealDto">
		select *
		from
			(
				select ad.*, hd.floor,hd.area
				from
				(
					select i.aptcode, i.aptname, i.buildyear, d.no, max(d.dealAmount) as dealAmount, 
						i.lat, i.lng, i.dongName 
					from houseinfo i
					left join housedeal d  on(i.aptcode = d.aptcode)
					<where>
						<if test="aptName != '' and aptName != null">aptName like concat('%', #{aptName}, '%')</if>
        				<if test="dongName != '' and dongName != null">dongName like #{dongName}</if>
					</where>
					group by i.aptcode
				) ad, housedeal hd
				where ad.no = hd.no
		    )
		    as a 
		left join 
		    (
				select aptcode, round(avg(recommend_score) as avgRecommend, avg(surround_score) as avgSurround, 
					avg(traffic_score) as avgTraffic, avg(living_score) as avgLiving 
					from review r join housedeal d
					on r.deal_idx = d.no
					group by aptCode
			) as r on (a.aptcode = r.aptcode)
		order by avgRecommend desc;
	</select>
	
	<!-- 레코드 하나를 해당 타입에 어떻게 매핑시켜 담아야하는지의 매핑전략 -->
	<resultMap type="HouseDealDto" id="HouseResultMap">
		<id column="no" property="no"/>
		<result column="aptCode" property="aptCode"/>
		<result column="aptName" property="aptName"/>
		<result column="dealAmount" property="dealAmount"/>
		<result column="area" property="area"/>
		<result column="dongName" property="dongName"/>
		<result column="floor" property="floor"/>
		<result column="buildYear" property="buildYear"/>
		<result column="lat" property="lat"/>
		<result column="lng" property="lng"/>
	</resultMap>
	
	<select id="getSido" resultType="SidoGugunCodeDto">
		select left(sidoCode,2) sidoCode, sidoName
		from sidocode
		order by sidoCode
	</select>
	
	<select id="getGugunInSido" parameterType="string" resultType="SidoGugunCodeDto">
		select left(gugunCode,5) gugunCode, gugunName
		from guguncode
		where left(gugunCode,2) = #{sido}
		order by gugunCode
	</select>
	
	<select id="getDongInGugun" parameterType="string" resultType="HouseDealDto">
		select distinct dongName
		from dongcode
		where left(dongCode, 5) = #{gugun}
		order by dongName
	</select>
	
</mapper>